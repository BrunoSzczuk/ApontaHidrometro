package br.com.brunoszczuk.apontahidrometro.entities;
// Generated 29/08/2018 23:02:23 by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.Valid;
import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Condicaopagto generated by hbm2java
 */
@Entity
@Table(name = "condicaopagto",
        schema = "public"
)
public class Condicaopagto implements java.io.Serializable {

    @Id
    @Column(name = "cd_condicaopagto", nullable = false, length = 3)
    @NotBlank
    @Size(max = 3)
    private String cdCondicaopagto;
    @Column(name = "ds_condicaopagto", nullable = false, length = 100)
    @Size(max = 100, min = 3)
    private String dsCondicaopagto;
    @Column(name = "st_ativo", nullable = false)
    private boolean stAtivo;
    
    @Valid
    @Size(min = 1, message = "{message.condicaopagto.itemcondicaopagtos}")
    @Fetch(FetchMode.JOIN)
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "condicaopagto")
    private Set<Itemcondicaopagto> itemcondicaopagtos = new HashSet<>(0);
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "condicaopagto")
    private Set<Contrato> contratos = new HashSet<>(0);

    @Transient
    @DecimalMin(value = "100", message = "{message.condicaopagto.quotatotal}")
    @DecimalMax(value = "100", message = "{message.condicaopagto.quotatotal}")
    private BigDecimal totalQuota;

    public Condicaopagto() {

    }

    public Condicaopagto(String cdCondicaopagto, String dsCondicaopagto, boolean stAtivo) {
        this.cdCondicaopagto = cdCondicaopagto;
        this.dsCondicaopagto = dsCondicaopagto;
        this.stAtivo = stAtivo;
    }

    public Condicaopagto(String cdCondicaopagto, String dsCondicaopagto, boolean stAtivo, Set<Itemcondicaopagto> itemcondicaopagtos, Set<Contrato> contratos, BigDecimal totalQuota) {

        this.cdCondicaopagto = cdCondicaopagto;
        this.dsCondicaopagto = dsCondicaopagto;
        this.stAtivo = stAtivo;
        this.itemcondicaopagtos = itemcondicaopagtos;
        this.contratos = contratos;
        this.totalQuota = totalQuota;
    }

    public String getCdCondicaopagto() {
        return this.cdCondicaopagto;
    }

    public void setCdCondicaopagto(String cdCondicaopagto) {
        this.cdCondicaopagto = cdCondicaopagto;
    }

    public String getDsCondicaopagto() {
        return this.dsCondicaopagto;
    }

    public void setDsCondicaopagto(String dsCondicaopagto) {
        this.dsCondicaopagto = dsCondicaopagto;
    }

    public boolean isStAtivo() {
        return this.stAtivo;
    }

    public void setStAtivo(boolean stAtivo) {
        this.stAtivo = stAtivo;
    }

    public Set<Itemcondicaopagto> getItemcondicaopagtos() {
        return this.itemcondicaopagtos;
    }

    public void setItemcondicaopagtos(Set<Itemcondicaopagto> itemcondicaopagtos) {
        this.itemcondicaopagtos = itemcondicaopagtos;
    }

    public Set<Contrato> getContratos() {
        return this.contratos;
    }

    public void setContratos(Set<Contrato> contratos) {
        this.contratos = contratos;
    }

    public BigDecimal getTotalQuota() {
        atualizaQuota();
        return totalQuota;
    }

    public void setTotalQuota(BigDecimal totalQuota) {
        this.totalQuota = totalQuota;
    }

    public void atualizaQuota() {
        totalQuota = new BigDecimal(0);
        itemcondicaopagtos.forEach(item -> totalQuota.add(new BigDecimal(item.getPcQuota())));
    }
}
