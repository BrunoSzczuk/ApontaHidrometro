package br.com.brunoszczuk.apontahidrometro.entities;
// Generated 29/08/2018 23:02:23 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Apontamento generated by hbm2java
 */
@Entity
@Table(name="apontamento"
    ,schema="public"
)
public class Apontamento  implements java.io.Serializable {


     private int cdApontamento;
     private Contrato contrato;
     private Equipamento equipamento;
     private Fotoapontamento fotoapontamento;
     private Usuario usuario;
     private int contAnterior;
     private int contApontado;
     private Date dtInclusao;
     private boolean stAtivo;
     private boolean stFechado;
     private Set<Fechamentoapontamento> fechamentoapontamentos = new HashSet<Fechamentoapontamento>(0);

    public Apontamento() {
    }

	
    public Apontamento(int cdApontamento, Contrato contrato, Equipamento equipamento, Fotoapontamento fotoapontamento, Usuario usuario, int contAnterior, int contApontado, Date dtInclusao, boolean stAtivo, boolean stFechado) {
        this.cdApontamento = cdApontamento;
        this.contrato = contrato;
        this.equipamento = equipamento;
        this.fotoapontamento = fotoapontamento;
        this.usuario = usuario;
        this.contAnterior = contAnterior;
        this.contApontado = contApontado;
        this.dtInclusao = dtInclusao;
        this.stAtivo = stAtivo;
        this.stFechado = stFechado;
    }
    public Apontamento(int cdApontamento, Contrato contrato, Equipamento equipamento, Fotoapontamento fotoapontamento, Usuario usuario, int contAnterior, int contApontado, Date dtInclusao, boolean stAtivo, boolean stFechado, Set<Fechamentoapontamento> fechamentoapontamentos) {
       this.cdApontamento = cdApontamento;
       this.contrato = contrato;
       this.equipamento = equipamento;
       this.fotoapontamento = fotoapontamento;
       this.usuario = usuario;
       this.contAnterior = contAnterior;
       this.contApontado = contApontado;
       this.dtInclusao = dtInclusao;
       this.stAtivo = stAtivo;
       this.stFechado = stFechado;
       this.fechamentoapontamentos = fechamentoapontamentos;
    }
   
     @Id 

    
    @Column(name="cd_apontamento", nullable=false)
    public int getCdApontamento() {
        return this.cdApontamento;
    }
    
    public void setCdApontamento(int cdApontamento) {
        this.cdApontamento = cdApontamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="nr_contrato", nullable=false)
    public Contrato getContrato() {
        return this.contrato;
    }
    
    public void setContrato(Contrato contrato) {
        this.contrato = contrato;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cd_equipamento", nullable=false)
    public Equipamento getEquipamento() {
        return this.equipamento;
    }
    
    public void setEquipamento(Equipamento equipamento) {
        this.equipamento = equipamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cd_foto", nullable=false)
    public Fotoapontamento getFotoapontamento() {
        return this.fotoapontamento;
    }
    
    public void setFotoapontamento(Fotoapontamento fotoapontamento) {
        this.fotoapontamento = fotoapontamento;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="cd_usuario", nullable=false)
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    
    @Column(name="cont_anterior", nullable=false)
    public int getContAnterior() {
        return this.contAnterior;
    }
    
    public void setContAnterior(int contAnterior) {
        this.contAnterior = contAnterior;
    }

    
    @Column(name="cont_apontado", nullable=false)
    public int getContApontado() {
        return this.contApontado;
    }
    
    public void setContApontado(int contApontado) {
        this.contApontado = contApontado;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dt_inclusao", nullable=false, length=29)
    public Date getDtInclusao() {
        return this.dtInclusao;
    }
    
    public void setDtInclusao(Date dtInclusao) {
        this.dtInclusao = dtInclusao;
    }

    
    @Column(name="st_ativo", nullable=false)
    public boolean isStAtivo() {
        return this.stAtivo;
    }
    
    public void setStAtivo(boolean stAtivo) {
        this.stAtivo = stAtivo;
    }

    
    @Column(name="st_fechado", nullable=false)
    public boolean isStFechado() {
        return this.stFechado;
    }
    
    public void setStFechado(boolean stFechado) {
        this.stFechado = stFechado;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="apontamento")
    public Set<Fechamentoapontamento> getFechamentoapontamentos() {
        return this.fechamentoapontamentos;
    }
    
    public void setFechamentoapontamentos(Set<Fechamentoapontamento> fechamentoapontamentos) {
        this.fechamentoapontamentos = fechamentoapontamentos;
    }




}


