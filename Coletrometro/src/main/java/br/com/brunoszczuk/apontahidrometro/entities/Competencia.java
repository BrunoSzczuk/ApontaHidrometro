package br.com.brunoszczuk.apontahidrometro.entities;
// Generated 29/08/2018 23:02:23 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.FutureOrPresent;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * Competencia generated by hbm2java
 */
@Entity
@Table(name = "competencia",
         schema = "public"
)
public class Competencia implements java.io.Serializable {

    
    private int cdCompetencia;

    @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date dtInclusao;
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    @FutureOrPresent
    private Date dtInicio;
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    @FutureOrPresent
    private Date dtFim;
    @NotBlank
    @Size(max = 100, min = 3)
    private String dsCompetencia;
    private boolean stAtivo;
    private Set<Fechamentoapontamento> fechamentoapontamentos = new HashSet<>(0);

    public Competencia() {
    }

    public Competencia(int cdCompetencia, Date dtInclusao, Date dtInicio, Date dtFim, String dsCompetencia, boolean stAtivo) {
        this.cdCompetencia = cdCompetencia;
        this.dtInclusao = dtInclusao;
        this.dtInicio = dtInicio;
        this.dtFim = dtFim;
        this.dsCompetencia = dsCompetencia;
        this.stAtivo = stAtivo;
    }

    public Competencia(int cdCompetencia, Date dtInclusao, Date dtInicio, Date dtFim, String dsCompetencia, boolean stAtivo, Set<Fechamentoapontamento> fechamentoapontamentos) {
        this.cdCompetencia = cdCompetencia;
        this.dtInclusao = dtInclusao;
        this.dtInicio = dtInicio;
        this.dtFim = dtFim;
        this.dsCompetencia = dsCompetencia;
        this.stAtivo = stAtivo;
        this.fechamentoapontamentos = fechamentoapontamentos;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "cd_competencia", nullable = false)
    public int getCdCompetencia() {
        return this.cdCompetencia;
    }

    public void setCdCompetencia(int cdCompetencia) {
        this.cdCompetencia = cdCompetencia;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "dt_inclusao", nullable = false, length = 13)
    public Date getDtInclusao() {
        return this.dtInclusao;
    }

    public void setDtInclusao(Date dtInclusao) {
        this.dtInclusao = dtInclusao;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "dt_inicio", nullable = false, length = 13)
    public Date getDtInicio() {
        return this.dtInicio;
    }

    public void setDtInicio(Date dtInicio) {
        this.dtInicio = dtInicio;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "dt_fim", nullable = false, length = 13)
    public Date getDtFim() {
        return this.dtFim;
    }

    public void setDtFim(Date dtFim) {
        this.dtFim = dtFim;
    }

    @Column(name = "ds_competencia", nullable = false, length = 100)
    public String getDsCompetencia() {
        return this.dsCompetencia;
    }

    public void setDsCompetencia(String dsCompetencia) {
        this.dsCompetencia = dsCompetencia;
    }

    @Column(name = "st_ativo", nullable = false)
    public boolean isStAtivo() {
        return this.stAtivo;
    }

    public void setStAtivo(boolean stAtivo) {
        this.stAtivo = stAtivo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "competencia")
    public Set<Fechamentoapontamento> getFechamentoapontamentos() {
        return this.fechamentoapontamentos;
    }

    public void setFechamentoapontamentos(Set<Fechamentoapontamento> fechamentoapontamentos) {
        this.fechamentoapontamentos = fechamentoapontamentos;
    }

}
