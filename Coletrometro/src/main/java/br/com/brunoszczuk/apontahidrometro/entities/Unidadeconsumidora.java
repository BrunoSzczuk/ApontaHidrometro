package br.com.brunoszczuk.apontahidrometro.entities;
// Generated 29/08/2018 23:02:23 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * Unidadeconsumidora generated by hbm2java
 */
@Entity
@Table(name = "unidadeconsumidora",
         schema = "public"
)
public class Unidadeconsumidora implements java.io.Serializable {

    private int cdUnidadeconsumidora;
    @NotNull(message = "{message.unddconsumidora.cliente}")
    private Cliente cliente;
    @NotNull(message = "{message.unddconsumidora.endereco}")
    private Endereco endereco;
    @NotNull(message = "{message.unddconsumidora.equipamento}")
    private Equipamento equipamento;
    private Date dtInclusao;
    private Set<Contrato> contratos = new HashSet<>(0);

    public Unidadeconsumidora() {
    }

    public Unidadeconsumidora(int cdUnidadeconsumidora, Cliente cliente, Endereco endereco, Equipamento equipamento, Date dtInclusao) {
        this.cdUnidadeconsumidora = cdUnidadeconsumidora;
        this.cliente = cliente;
        this.endereco = endereco;
        this.equipamento = equipamento;
        this.dtInclusao = dtInclusao;
    }

    public Unidadeconsumidora(int cdUnidadeconsumidora, Cliente cliente, Endereco endereco, Equipamento equipamento, Date dtInclusao, Set<Contrato> contratos) {
        this.cdUnidadeconsumidora = cdUnidadeconsumidora;
        this.cliente = cliente;
        this.endereco = endereco;
        this.equipamento = equipamento;
        this.dtInclusao = dtInclusao;
        this.contratos = contratos;
    }

    @Id

    @Column(name = "cd_unidadeconsumidora", nullable = false)
    public int getCdUnidadeconsumidora() {
        return this.cdUnidadeconsumidora;
    }

    public void setCdUnidadeconsumidora(int cdUnidadeconsumidora) {
        this.cdUnidadeconsumidora = cdUnidadeconsumidora;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @Fetch(FetchMode.JOIN)
    @JoinColumn(name = "cd_cliente", nullable = false)
    public Cliente getCliente() {
        return this.cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @Fetch(FetchMode.JOIN)
    @JoinColumn(name = "cd_endereco", nullable = false)
    public Endereco getEndereco() {
        return this.endereco;
    }

    public void setEndereco(Endereco endereco) {
        this.endereco = endereco;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @Fetch(FetchMode.JOIN)
    @JoinColumn(name = "cd_equipamento", nullable = false)
    public Equipamento getEquipamento() {
        return this.equipamento;
    }

    public void setEquipamento(Equipamento equipamento) {
        this.equipamento = equipamento;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(pattern = "dd/MM/yyyy")
    @Column(name = "dt_inclusao", nullable = false, length = 29)
    public Date getDtInclusao() {
        return this.dtInclusao;
    }

    public void setDtInclusao(Date dtInclusao) {
        this.dtInclusao = dtInclusao;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "unidadeconsumidora")
    public Set<Contrato> getContratos() {
        return this.contratos;
    }

    public void setContratos(Set<Contrato> contratos) {
        this.contratos = contratos;
    }

}
