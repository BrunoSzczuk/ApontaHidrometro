package br.com.brunoszczuk.apontahidrometro.entities;
// Generated 29/08/2018 23:02:23 by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * Contratousuario generated by hbm2java
 */
@Entity
@Table(name = "contratousuario",
         schema = "public"
)
public class Contratousuario implements java.io.Serializable {

    private int cdContratousuario;
    @NotNull(message = "{message.contratousuario.contrato}")
    private Contrato contrato;
    @NotNull(message = "{message.contratousuario.usuario}")
    private Usuario usuario;
    private Date dtInclusao;

    public Contratousuario() {
    }

    public Contratousuario(int cdContratousuario, Contrato contrato, Usuario usuario, Date dtInclusao) {
        this.cdContratousuario = cdContratousuario;
        this.contrato = contrato;
        this.usuario = usuario;
        this.dtInclusao = dtInclusao;
    }

    @Id

    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "cd_contratousuario", nullable = false)
    public int getCdContratousuario() {
        return this.cdContratousuario;
    }

    public void setCdContratousuario(int cdContratousuario) {
        this.cdContratousuario = cdContratousuario;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @Fetch(FetchMode.JOIN)
    @JoinColumn(name = "nr_contrato", nullable = false)
    public Contrato getContrato() {
        return this.contrato;
    }

    public void setContrato(Contrato contrato) {
        this.contrato = contrato;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @Fetch(FetchMode.JOIN)
    @JoinColumn(name = "cd_usuario", nullable = false)
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(pattern = "dd/MM/yyyy")
    @Column(name = "dt_inclusao", nullable = false, length = 29)
    public Date getDtInclusao() {
        return this.dtInclusao;
    }

    public void setDtInclusao(Date dtInclusao) {
        this.dtInclusao = dtInclusao;
    }

}
